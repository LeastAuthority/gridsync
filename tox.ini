[tox]
envlist = py{37,38,39},lint,dependencies
skip_missing_interpreters = True

[testenv]
usedevelop = True
install_command = python -m pip install --no-deps {opts} {packages}
deps =
    -r{toxinidir}/requirements/gridsync.txt
    -r{toxinidir}/requirements/pytest.txt
commands =
    python -m pytest
passenv = *

[testenv:lint]
usedevelop = True
basepython = python3.9
install_command = python -m pip install --no-deps {opts} {packages}
deps =
    -r{toxinidir}/requirements/gridsync.txt
    -r{toxinidir}/requirements/lint.txt
commands =
    black --line-length=79 --check --diff setup.py gridsync tests
    isort --line-length=79 --check --diff setup.py gridsync tests
    mypy gridsync
    flake8 setup.py gridsync tests
    pylint --reports=no gridsync

[testenv:pyinstaller]
usedevelop = True
install_command = python -m pip install --no-deps {opts} {packages}
deps =
    -r{toxinidir}/requirements/gridsync.txt
    -r{toxinidir}/requirements/pyinstaller.txt
    -r{toxinidir}/requirements/tahoe-lafs.txt
    -r{toxinidir}/requirements/magic-folder.txt
setenv =
    PYTHONHASHSEED=1
    SOURCE_DATE_EPOCH=1641774040
commands =
    python -m pip install -r{toxinidir}/requirements/magic-folder.in
    python -m pip install git+https://github.com/pyinstaller/pyinstaller@cad0725b3cd9717c6a46c1f90107a0f59d1d95bb
    pip list
    pyinstaller -y gridsync.spec


[testenv:integration]
usedevelop = True
basepython = python3.9
install_command = python -m pip install --no-deps {opts} {packages}
deps =
    -r{toxinidir}/requirements/gridsync.txt
    -r{toxinidir}/requirements/pytest.txt
commands =
    python -m pytest tests/integration


# To test for conflicts and other depedencies-related issues when
# installing requirements without the "--no-deps" flag as well as to
# check for orphaned or outdated depedencies.
[testenv:dependencies]
basepython = python3.9
install_command = python -m pip install --upgrade {packages}
deps =
    pip
    setuptools
    wheel
    pipdeptree
skip_install = True
ignore_errors = True
ignore_outcome = True
commands =
    {envpython} -m pip install -r{toxinidir}/requirements/dmgbuild.txt
    {envpython} -m pip install -r{toxinidir}/requirements/gridsync.txt
    {envpython} -m pip install -r{toxinidir}/requirements/lint.txt
    {envpython} -m pip install -r{toxinidir}/requirements/pyinstaller.txt
    {envpython} -m pip install -r{toxinidir}/requirements/pytest.txt
    {envpython} -m pip install --editable .
    {envpython} -m pipdeptree --local-only
    {envpython} -m pip list --outdated


[testenv:generate-hashes]
basepython = python3.9
skip_install = True
install_command = python -m pip install {opts} {packages}
deps =
    pip-tools
    hashin
commands =
    pip-compile --allow-unsafe --generate-hashes --output-file=requirements/gridsync-base.txt requirements/gridsync-base.in
    hashin --update-all -r requirements/gridsync-platform.txt


[testenv:pin-tahoe-dependencies]
basepython = python3.9
skip_install = True
install_command = python -m pip install {opts} {packages}
deps =
    pip-tools
commands =
    pip-compile --allow-unsafe --generate-hashes --output-file=requirements/tahoe-lafs-noarch.txt requirements/tahoe-lafs.in

[testenv:pin-magic-folder-dependencies]
basepython = python3.9
skip_install = True
install_command = python -m pip install {opts} {packages}
deps =
    pip-tools
    hashin
commands =
    pip-compile --allow-unsafe --generate-hashes --output-file=requirements/magic-folder-base.txt requirements/magic-folder.in
    hashin --update-all -r requirements/magic-folder-platform.txt

[testenv:pin-pyinstaller-dependencies]
basepython = python3.9
skip_install = True
install_command = python -m pip install {opts} {packages}
deps =
    pip-tools
    hashin
commands =
    pip-compile --allow-unsafe --generate-hashes --output-file=requirements/pyinstaller-base.txt requirements/pyinstaller.in
    hashin --update-all -r requirements/pyinstaller-platform.txt


[testenv:update-github-repo]
basepython = python3.9
skip_install = True
install_command = python -m pip install {opts} {packages}
deps =
    httpx
commands =
    {envpython} {toxinidir}/scripts/update-github-repo {posargs}


[flake8]
ignore = E203, E265, E402, E501, N802, W503
exclude = scripts/*, misc/*,
max-complexity = 10

[pytest]
testpaths = tests
addopts = -rs -s -m "not slow" --ignore=tests/integration --cov-config=tox.ini --cov-append --cov-report=html --cov=gridsync
qt_api = pyqt5

# .coveragerc
[run]
omit = gridsync/_version.py
